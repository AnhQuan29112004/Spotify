

@model MusicApp.Models.MusicViewModel

@{
    ViewBag.Title = "Music";
}

<h2>Music List</h2>

<div style="display:flex;justify-content:end;padding: 10px 5px">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addSongModal">
        Add a Song
    </button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Song ID</th>
            <th>Song Title</th>
            <th>Singer Name</th>
            <th>Created Time</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var song in Model.Songs)
        {
            <tr>
                <td>@song.SongId</td>
                <td>@song.SongTitle</td>
                <td>@song.SingerName</td>
                <td>@(song.CreatedTime.HasValue ? song.CreatedTime.Value.ToString("MM/dd/yyyy") : "N/A")</td>
                <td>
                    <a href="/Admin/Edit/@song.SongId" class="btn btn-primary">Edit</a>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal" data-song-id="@song.SongId">
                        Delete
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Add Song Modal -->
<div class="modal fade" id="addSongModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add a song</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UploadSong", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div style="display: flex; justify-content: space-between;margin-bottom: 10px;">
                        <label name="song_name">Song Name</label>
                        <input type="text" id="id" name="song_name" style="width: 65%;" />
                    </div>

                    <label for="musicFile">Select Music File:</label>
                    <input type="file" name="musicFile" accept="audio/*" /><br /><br />

                    <label for="thumbnailFile">Select Thumbnail Image:</label>
                    <input type="file" name="thumbnailFile" accept="image/*" onchange="previewImage(event)" /><br /><br />

                    <img id="imagePreview" src="#" alt="Image Preview" style="display:none; width:200px; height:200px;" /><br /><br />

                    <label for="singerSelect">Select Singer:</label>
                    <select name="singerSelect" id="singerSelect" class="form-control">
                        <option value="">-- Select an Existing Singer --</option>
                        @foreach (var singer in Model.Singers)
                        {
                            <option value="@singer.SingerId">@singer.SingerName</option>
                        }
                    </select>

                    <label for="newSingerName">Or Add New Singer:</label>
                    <input type="text" name="newSingerName" class="form-control" />

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                }
            </div>

        </div>
    </div>
</div>

<!-- Delete Confirm Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this song? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>


<script>
    function previewImage(event) {
        var imagePreview = document.getElementById('imagePreview');
        var file = event.target.files[0];
        var reader = new FileReader();

        reader.onload = function () {
            imagePreview.src = reader.result;
            imagePreview.style.display = "block"; // Show the image preview
        };

        if (file) {
            reader.readAsDataURL(file); // Convert the file to a base64 string for preview
        } else {
            imagePreview.src = "#";
            imagePreview.style.display = "none"; // Hide the preview if no file is selected
        }
    }

    $(document).ready(function () {
        var songIdToDelete;

        // When the delete button is clicked, set the song ID in the modal
        $('#deleteConfirmModal').on('show.bs.modal', function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            songIdToDelete = button.getAttribute('data-song-id'); // Extract song ID from data attribute
        });

        // When confirm delete button is clicked
        $('#confirmDeleteBtn').on('click', function () {
            $.ajax({
                type: 'POST', // Use POST to call your delete action
                url: '/Admin/DeleteSong', // The URL for the delete action
                data: { songId: songIdToDelete }, // Send the song ID in the request body
                success: function (response) {
                    // Optionally handle a successful response (e.g., show a success message)
                    $('#deleteConfirmModal').modal('hide'); // Hide the modal
                    // Refresh or update the song list on the page without refreshing
                    location.reload(); // Simple way to refresh the list (or implement your own logic)
                },
                error: function (xhr, status, error) {
                    // Optionally handle an error response (e.g., show an error message)
                    console.error("Error deleting song:", error);
                    alert("There was an error deleting the song. Please try again.");
                }
            });
        });
    });

</script>

