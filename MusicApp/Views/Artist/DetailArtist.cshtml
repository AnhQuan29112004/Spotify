@model MusicApp.Models.MusicViewModel
@{
    ViewBag.Title = "Details";
    int index = 1;
}
@Scripts.Render("~/Scripts/global.js")
<!DOCTYPE html>
<html>
<head>
    <link href="~/Assets/css/artist2.css" rel="stylesheet" />
    <style>

        .wave-bar {
            width: 3px;
            height: 8px;
            background-color: #1ed760;
            animation: wave-animation 0.6s infinite ease-in-out;
        }

            /* Tạo độ cao khác nhau cho các cột */
            .wave-bar:nth-child(1) {
                animation-delay: 0.1s;
                height: 8px;
            }

            .wave-bar:nth-child(2) {
                animation-delay: 0.2s;
                height: 12px;
            }

            .wave-bar:nth-child(3) {
                animation-delay: 0.3s;
                height: 8px;
            }

        /* Hiệu ứng chuyển động */
        @@keyframes wave-animation {
            0%, 100% {
                transform: scaleY(1);
            }

            50% {
                transform: scaleY(1.5);
            }
        }

        .btnPlay_Pause {
            color: #1ed760;
            font-size: 28px;
            line-height: 0;
            font-size: 60px
        }

            .btnPlay_Pause:hover {
                transform: scale(1.05);
                border-radius: 50px;
                color: #3be477;
                font-size: 28px;
                line-height: 0;
                font-size: 60px
            }

        .track-index {
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>

</head>
<body>
    <div class="gradient_background" style="display: flex; flex-direction: column;max-height:100%; max-width:100%">
        <div style="display:flex; position:relative; width:100%; height:40%">
            <div class="image-container" style="height: 100%; width: 100%;  ">
                <img src="~/Assets/img/jungkook.jpg" alt="Jungkook_img" class="fade-out-image" style="width: 100%; height: 100%;" />
            </div>

            <div style="position: absolute; margin-left: 20px; padding-top: 110px;">
                <h1 style="color:white; font-weight: bold; font-size:100px">Jung Kook</h1>
                <p style="color:white; font-size:15px">19,576,629 monthly listeners</p>
            </div>
        </div>

        <div style="background-color: rgba(25, 20, 20,0.2);padding-top:30px; padding-left: 20px; width: 100%; display: flex; gap: 30px; max-width: 100%; flex-direction: column">
            <div style="display: flex; align-items: center; gap: 30px; width:100%">
                <i id="toggleIcon" class="bi bi-play-circle-fill btnPlay_Pause" onclick="changeIcon(this)"></i>
                <button class="btn btn-outline-light follow-btn">Follow</button>
                <i class="bi bi-three-dots" style="color: #b3b3b3"></i>
            </div>

            <div style=" width: 100%">
                <h2 style="color:white">Popular</h2>
                @foreach (var song in Model.Songs)
                {


                    <div class="row g-0 popular-track track-container" data-index="1" data-audio="@Url.Content("~/Public/Songs/Jung Kook (정국) - Seven (feat. Latto) (Explicit Ver.).mp3")" onclick="togglePlayPause(this)" style="font-size:1rem; display:flex; align-items:center; cursor:pointer;" onmouseenter="showIcon(this)" onmouseleave="resetIcon(this)">
                        <div class="col-11 col-sm-8" style="display:flex; gap:16px; align-items:center;">
                            <div style="color: #b3b3b3;" class="track-index">
                                <p class="index-text">@index</p>
                                <i class="bi bi-play-fill d-none"></i>
                                <i class="bi bi-pause-fill d-none"></i>
                                <div class="bar-wave d-none" style="display: flex; gap: 2px; align-items: center;">
                                    <i class="wave-bar"></i>
                                    <i class="wave-bar"></i>
                                    <i class="wave-bar"></i>
                                </div>
                            </div>
                            <div style="height:40px; width:40px;">
                                <img src="@Url.Content("~/Public/Images/"+song.SongThumbnail)" class="rounded-1" style="height: 100%; width: 100%;" alt="..." />
                            </div>
                            <span style="color:white;">@song.SongTitle</span>
                        </div>
                        <div class="col-3 d-none d-sm-block" style="color: #b3b3b3;">@song.Views</div>
                        <div class="col-1" style="color: #b3b3b3;">@song.Duration</div>
                    </div>
                    index++;
                }

            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            const image = $(".fade-out-image"); // Sử dụng jQuery để tìm ảnh
            const fadeOutContainer = $(".fade-out-container");

            fadeOutContainer.on("scroll", function () {
                const scrollTop = fadeOutContainer.scrollTop(); // Lấy vị trí cuộn của div
                const fadePoint = 150; // Điều chỉnh giá trị này theo nhu cầu

                if (scrollTop < fadePoint) {
                    const scale = 1.1 - (scrollTop / (fadePoint * 10));
                    const opacity = 1 - scrollTop / fadePoint;
                    image.css({
                        "opacity": opacity,
                        "transform": `scale(${scale})` // Áp dụng scale
                    });
                } else {
                    image.css({
                        "opacity": 0,
                        "transform": "scale(0.9)" // Kích thước nhỏ nhất khi cuộn đến fadePoint
                    });
                }
            });
        });

        function changeIcon(icon) {
            icon.classList.toggle('bi-play-circle-fill');
            icon.classList.toggle('bi-pause-circle-fill');
        }

        //Khi hover qua từng dòng nhạc và bấm vào thì đổi icon


        let currentPlaying = null;
        const audioPlayer = document.getElementById("audioPlayer");

        function showIcon(element) {
            const playIcon = element.querySelector(".track-index .bi-play-fill");
            const pauseIcon = element.querySelector(".track-index .bi-pause-fill");
            const indexText = element.querySelector(".track-index .index-text");
            const waveIcon = element.querySelector(".track-index .bar-wave");
            if (element === currentPlaying) {
                // Nếu div đang phát, hiển thị icon "pause"
                indexText.classList.add("d-none");
                playIcon.classList.add("d-none");
                pauseIcon.classList.remove("d-none");
                waveIcon.classList.add("d-none");
            } else {
                // Nếu div chưa phát, hiển thị icon "play"
                indexText.classList.add("d-none");
                playIcon.classList.remove("d-none");
                waveIcon.classList.add("d-none");
            }
        }

        function resetIcon(element) {
            const playIcon = element.querySelector(".track-index .bi-play-fill");
            const pauseIcon = element.querySelector(".track-index .bi-pause-fill");
            const indexText = element.querySelector(".track-index .index-text");
            const waveIcon = element.querySelector(".track-index .bar-wave");
            // Nếu là div đang phát, trở về số ban đầu nhưng giữ trạng thái "pause" khi hover lại
            if (element === currentPlaying) {
                indexText.classList.add("d-none");
                playIcon.classList.add("d-none");
                pauseIcon.classList.add("d-none");
                waveIcon.classList.remove("d-none");
            } else {
                // Nếu không, hiển thị lại số và ẩn icon "play"
                indexText.classList.remove("d-none");
                playIcon.classList.add("d-none");
                pauseIcon.classList.add("d-none");
                waveIcon.classList.add("d-none");
            }
        }

        function togglePlayPause(element) {
            const playIcon = element.querySelector(".track-index .bi-play-fill");
            const pauseIcon = element.querySelector(".track-index .bi-pause-fill");
            const indexText = element.querySelector(".track-index .index-text");
            const waveIcon = element.querySelector(".track-index .bar-wave");
            const songSrc = element.getAttribute("data-audio");

            // Lặp qua từng bài hát và gán sự kiện click


            // Nếu hiện tại là div đang phát
            if (currentPlaying) {
                const currentPlayIcon = currentPlaying.querySelector(".track-index .bi-play-fill");
                const currentPauseIcon = currentPlaying.querySelector(".track-index .bi-pause-fill");
                const currentIndexText = currentPlaying.querySelector(".track-index .index-text");
                const currentwaveIcon = currentPlaying.querySelector(".track-index .bar-wave");
                // Chuyển trạng thái bài hát đang phát về số ban đầu
                currentPauseIcon.classList.add("d-none");
                currentPlayIcon.classList.add("d-none");
                currentIndexText.classList.remove("d-none");
                currentwaveIcon.classList.add("d-none");

                audioPlayer.pause(); // Dừng bài hát hiện tại
            }

            // Cập nhật trạng thái cho bài hát mới được phát
            if (currentPlaying === element) {
                // Nếu bài đang phát được nhấn lại, dừng phát
                pauseIcon.classList.add("d-none");
                playIcon.classList.remove("d-none");
                indexText.classList.add("d-none");
                waveIcon.classList.add("d-none");
                currentPlaying = null;
                audioPlayer.pause(); // Dừng phát
            } else {
                // Nếu là div mới, hiển thị "pause" và cập nhật currentPlaying
                playIcon.classList.add("d-none");
                pauseIcon.classList.remove("d-none");
                indexText.classList.add("d-none");
                waveIcon.classList.add("d-none");
                currentPlaying = element;


                // Phát nhạc bài mới
                audioPlayer.querySelector("source").src = songSrc;
                audioPlayer.load();
                audioPlayer.play().then(() => {
                    console.log("Đang phát nhạc:", songSrc);
                }).catch(error => {
                    console.error("Không thể phát nhạc:", error);
                });

            }
        }
        @*$(document).ready(function () {
        // Store the current song ID
            const $toggleButton = $('#toggle-button');
            const test = $('#musicPlayerFooter');
            currentSongId = null;


        $toggleButton.click(function () {
            // Get song details from data attributes
            const songTitle = @Html.Raw(Json.Encode(Model.DetailSong.SongTitle));
            const artistName = @Html.Raw(Json.Encode(Model.DetailSong.SingerName));
            const albumArt = @Html.Raw(Json.Encode(Model.DetailSong.SongThumbnail));
            const songSrc = @Html.Raw(Json.Encode(Model.DetailSong.SongSrc));
            const songId = @Html.Raw(Json.Encode(Model.DetailSong.SongId)); // Unique ID for the song


            // Check if the same song is already playing in the footer
            if (songId === currentSongId && audio.paused === false) {
                // Pause if the song is already playing
                $(document).trigger('pauseSong');
                $toggleButton.find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');
            } else {
                // Play the song and update footer
                $(document).trigger('playSong', {
                    id: songId,
                    title: songTitle,
                    artist: artistName,
                    albumArt: albumArt,
                    src: songSrc
                });
                currentSongId = songId;
                $toggleButton.find('i').removeClass('bi-playe-fill').addClass('bi-pause-fill');
            }
        });

        // Listen for play/pause updates from the footer player to sync button states
        $(document).on('footerSongPaused', function () {
            $toggleButton.find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');
        });

        $(document).on('footerSongPlaying', function () {
            $toggleButton.find('i').removeClass('bi-play-fill').addClass('bi-pause-fill');
        });
    });*@
    </script>
</body>
</html>

