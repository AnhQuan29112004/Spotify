#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="music")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertASPStateTempApplication(ASPStateTempApplication instance);
    partial void UpdateASPStateTempApplication(ASPStateTempApplication instance);
    partial void DeleteASPStateTempApplication(ASPStateTempApplication instance);
    partial void InsertASPStateTempSession(ASPStateTempSession instance);
    partial void UpdateASPStateTempSession(ASPStateTempSession instance);
    partial void DeleteASPStateTempSession(ASPStateTempSession instance);
    partial void Insertmic_favourite_song(mic_favourite_song instance);
    partial void Updatemic_favourite_song(mic_favourite_song instance);
    partial void Deletemic_favourite_song(mic_favourite_song instance);
    partial void Insertmic_playlist(mic_playlist instance);
    partial void Updatemic_playlist(mic_playlist instance);
    partial void Deletemic_playlist(mic_playlist instance);
    partial void Insertmic_singer(mic_singer instance);
    partial void Updatemic_singer(mic_singer instance);
    partial void Deletemic_singer(mic_singer instance);
    partial void Insertmic_song_comment(mic_song_comment instance);
    partial void Updatemic_song_comment(mic_song_comment instance);
    partial void Deletemic_song_comment(mic_song_comment instance);
    partial void Insertmic_song_like(mic_song_like instance);
    partial void Updatemic_song_like(mic_song_like instance);
    partial void Deletemic_song_like(mic_song_like instance);
    partial void Insertmic_song_playlist(mic_song_playlist instance);
    partial void Updatemic_song_playlist(mic_song_playlist instance);
    partial void Deletemic_song_playlist(mic_song_playlist instance);
    partial void Insertmic_song(mic_song instance);
    partial void Updatemic_song(mic_song instance);
    partial void Deletemic_song(mic_song instance);
    partial void Insertmic_user(mic_user instance);
    partial void Updatemic_user(mic_user instance);
    partial void Deletemic_user(mic_user instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ASPStateTempApplication> ASPStateTempApplications
		{
			get
			{
				return this.GetTable<ASPStateTempApplication>();
			}
		}
		
		public System.Data.Linq.Table<ASPStateTempSession> ASPStateTempSessions
		{
			get
			{
				return this.GetTable<ASPStateTempSession>();
			}
		}
		
		public System.Data.Linq.Table<mic_favourite_song> mic_favourite_songs
		{
			get
			{
				return this.GetTable<mic_favourite_song>();
			}
		}
		
		public System.Data.Linq.Table<mic_playlist> mic_playlists
		{
			get
			{
				return this.GetTable<mic_playlist>();
			}
		}
		
		public System.Data.Linq.Table<mic_singer> mic_singers
		{
			get
			{
				return this.GetTable<mic_singer>();
			}
		}
		
		public System.Data.Linq.Table<mic_song_comment> mic_song_comments
		{
			get
			{
				return this.GetTable<mic_song_comment>();
			}
		}
		
		public System.Data.Linq.Table<mic_song_like> mic_song_likes
		{
			get
			{
				return this.GetTable<mic_song_like>();
			}
		}
		
		public System.Data.Linq.Table<mic_song_playlist> mic_song_playlists
		{
			get
			{
				return this.GetTable<mic_song_playlist>();
			}
		}
		
		public System.Data.Linq.Table<mic_song> mic_songs
		{
			get
			{
				return this.GetTable<mic_song>();
			}
		}
		
		public System.Data.Linq.Table<mic_user> mic_users
		{
			get
			{
				return this.GetTable<mic_user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASPStateTempApplications")]
	public partial class ASPStateTempApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppId;
		
		private string _AppName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIdChanging(int value);
    partial void OnAppIdChanged();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    #endregion
		
		public ASPStateTempApplication()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AppId
		{
			get
			{
				return this._AppId;
			}
			set
			{
				if ((this._AppId != value))
				{
					this.OnAppIdChanging(value);
					this.SendPropertyChanging();
					this._AppId = value;
					this.SendPropertyChanged("AppId");
					this.OnAppIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppName", DbType="Char(280) NOT NULL", CanBeNull=false)]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this.OnAppNameChanging(value);
					this.SendPropertyChanging();
					this._AppName = value;
					this.SendPropertyChanged("AppName");
					this.OnAppNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASPStateTempSessions")]
	public partial class ASPStateTempSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SessionId;
		
		private System.DateTime _Created;
		
		private System.DateTime _Expires;
		
		private System.DateTime _LockDate;
		
		private System.DateTime _LockDateLocal;
		
		private int _LockCookie;
		
		private int _Timeout;
		
		private bool _Locked;
		
		private System.Data.Linq.Binary _SessionItemShort;
		
		private System.Data.Linq.Binary _SessionItemLong;
		
		private int _Flags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnExpiresChanging(System.DateTime value);
    partial void OnExpiresChanged();
    partial void OnLockDateChanging(System.DateTime value);
    partial void OnLockDateChanged();
    partial void OnLockDateLocalChanging(System.DateTime value);
    partial void OnLockDateLocalChanged();
    partial void OnLockCookieChanging(int value);
    partial void OnLockCookieChanged();
    partial void OnTimeoutChanging(int value);
    partial void OnTimeoutChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnSessionItemShortChanging(System.Data.Linq.Binary value);
    partial void OnSessionItemShortChanged();
    partial void OnSessionItemLongChanging(System.Data.Linq.Binary value);
    partial void OnSessionItemLongChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    #endregion
		
		public ASPStateTempSession()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="NVarChar(88) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="DateTime NOT NULL")]
		public System.DateTime Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this.OnExpiresChanging(value);
					this.SendPropertyChanging();
					this._Expires = value;
					this.SendPropertyChanged("Expires");
					this.OnExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime NOT NULL")]
		public System.DateTime LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDateLocal", DbType="DateTime NOT NULL")]
		public System.DateTime LockDateLocal
		{
			get
			{
				return this._LockDateLocal;
			}
			set
			{
				if ((this._LockDateLocal != value))
				{
					this.OnLockDateLocalChanging(value);
					this.SendPropertyChanging();
					this._LockDateLocal = value;
					this.SendPropertyChanged("LockDateLocal");
					this.OnLockDateLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockCookie", DbType="Int NOT NULL")]
		public int LockCookie
		{
			get
			{
				return this._LockCookie;
			}
			set
			{
				if ((this._LockCookie != value))
				{
					this.OnLockCookieChanging(value);
					this.SendPropertyChanging();
					this._LockCookie = value;
					this.SendPropertyChanged("LockCookie");
					this.OnLockCookieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeout", DbType="Int NOT NULL")]
		public int Timeout
		{
			get
			{
				return this._Timeout;
			}
			set
			{
				if ((this._Timeout != value))
				{
					this.OnTimeoutChanging(value);
					this.SendPropertyChanging();
					this._Timeout = value;
					this.SendPropertyChanged("Timeout");
					this.OnTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionItemShort", DbType="VarBinary(7000)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SessionItemShort
		{
			get
			{
				return this._SessionItemShort;
			}
			set
			{
				if ((this._SessionItemShort != value))
				{
					this.OnSessionItemShortChanging(value);
					this.SendPropertyChanging();
					this._SessionItemShort = value;
					this.SendPropertyChanged("SessionItemShort");
					this.OnSessionItemShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionItemLong", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SessionItemLong
		{
			get
			{
				return this._SessionItemLong;
			}
			set
			{
				if ((this._SessionItemLong != value))
				{
					this.OnSessionItemLongChanging(value);
					this.SendPropertyChanging();
					this._SessionItemLong = value;
					this.SendPropertyChanged("SessionItemLong");
					this.OnSessionItemLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_favourite_songs")]
	public partial class mic_favourite_song : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _favourite_song_id;
		
		private System.Nullable<int> _song_id;
		
		private System.Nullable<int> _user_id;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_time;
		
		private EntityRef<mic_song> _mic_song;
		
		private EntityRef<mic_user> _mic_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfavourite_song_idChanging(int value);
    partial void Onfavourite_song_idChanged();
    partial void Onsong_idChanging(System.Nullable<int> value);
    partial void Onsong_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_timeChanged();
    #endregion
		
		public mic_favourite_song()
		{
			this._mic_song = default(EntityRef<mic_song>);
			this._mic_user = default(EntityRef<mic_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_favourite_song_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int favourite_song_id
		{
			get
			{
				return this._favourite_song_id;
			}
			set
			{
				if ((this._favourite_song_id != value))
				{
					this.Onfavourite_song_idChanging(value);
					this.SendPropertyChanging();
					this._favourite_song_id = value;
					this.SendPropertyChanged("favourite_song_id");
					this.Onfavourite_song_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_id", DbType="Int")]
		public System.Nullable<int> song_id
		{
			get
			{
				return this._song_id;
			}
			set
			{
				if ((this._song_id != value))
				{
					if (this._mic_song.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsong_idChanging(value);
					this.SendPropertyChanging();
					this._song_id = value;
					this.SendPropertyChanged("song_id");
					this.Onsong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mic_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(50)")]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_time
		{
			get
			{
				return this._modified_time;
			}
			set
			{
				if ((this._modified_time != value))
				{
					this.Onmodified_timeChanging(value);
					this.SendPropertyChanging();
					this._modified_time = value;
					this.SendPropertyChanged("modified_time");
					this.Onmodified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_favourite_song", Storage="_mic_song", ThisKey="song_id", OtherKey="song_id", IsForeignKey=true)]
		public mic_song mic_song
		{
			get
			{
				return this._mic_song.Entity;
			}
			set
			{
				mic_song previousValue = this._mic_song.Entity;
				if (((previousValue != value) 
							|| (this._mic_song.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_song.Entity = null;
						previousValue.mic_favourite_songs.Remove(this);
					}
					this._mic_song.Entity = value;
					if ((value != null))
					{
						value.mic_favourite_songs.Add(this);
						this._song_id = value.song_id;
					}
					else
					{
						this._song_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mic_song");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_favourite_song", Storage="_mic_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mic_user mic_user
		{
			get
			{
				return this._mic_user.Entity;
			}
			set
			{
				mic_user previousValue = this._mic_user.Entity;
				if (((previousValue != value) 
							|| (this._mic_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_user.Entity = null;
						previousValue.mic_favourite_songs.Remove(this);
					}
					this._mic_user.Entity = value;
					if ((value != null))
					{
						value.mic_favourite_songs.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("mic_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_playlists")]
	public partial class mic_playlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _playlist_id;
		
		private string _name;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_time;
		
		private string _avatar;
		
		private string _playlist_url;
		
		private int _user_id;
		
		private EntitySet<mic_song_playlist> _mic_song_playlists;
		
		private EntityRef<mic_user> _mic_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplaylist_idChanging(int value);
    partial void Onplaylist_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_timeChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    partial void Onplaylist_urlChanging(string value);
    partial void Onplaylist_urlChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    #endregion
		
		public mic_playlist()
		{
			this._mic_song_playlists = new EntitySet<mic_song_playlist>(new Action<mic_song_playlist>(this.attach_mic_song_playlists), new Action<mic_song_playlist>(this.detach_mic_song_playlists));
			this._mic_user = default(EntityRef<mic_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playlist_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int playlist_id
		{
			get
			{
				return this._playlist_id;
			}
			set
			{
				if ((this._playlist_id != value))
				{
					this.Onplaylist_idChanging(value);
					this.SendPropertyChanging();
					this._playlist_id = value;
					this.SendPropertyChanged("playlist_id");
					this.Onplaylist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(50)")]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_time
		{
			get
			{
				return this._modified_time;
			}
			set
			{
				if ((this._modified_time != value))
				{
					this.Onmodified_timeChanging(value);
					this.SendPropertyChanging();
					this._modified_time = value;
					this.SendPropertyChanged("modified_time");
					this.Onmodified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NChar(500)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playlist_url", DbType="NVarChar(500)")]
		public string playlist_url
		{
			get
			{
				return this._playlist_url;
			}
			set
			{
				if ((this._playlist_url != value))
				{
					this.Onplaylist_urlChanging(value);
					this.SendPropertyChanging();
					this._playlist_url = value;
					this.SendPropertyChanged("playlist_url");
					this.Onplaylist_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mic_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_playlist_mic_song_playlist", Storage="_mic_song_playlists", ThisKey="playlist_id", OtherKey="playlist_id")]
		public EntitySet<mic_song_playlist> mic_song_playlists
		{
			get
			{
				return this._mic_song_playlists;
			}
			set
			{
				this._mic_song_playlists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_playlist", Storage="_mic_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mic_user mic_user
		{
			get
			{
				return this._mic_user.Entity;
			}
			set
			{
				mic_user previousValue = this._mic_user.Entity;
				if (((previousValue != value) 
							|| (this._mic_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_user.Entity = null;
						previousValue.mic_playlists.Remove(this);
					}
					this._mic_user.Entity = value;
					if ((value != null))
					{
						value.mic_playlists.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mic_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mic_song_playlists(mic_song_playlist entity)
		{
			this.SendPropertyChanging();
			entity.mic_playlist = this;
		}
		
		private void detach_mic_song_playlists(mic_song_playlist entity)
		{
			this.SendPropertyChanging();
			entity.mic_playlist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_singers")]
	public partial class mic_singer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _singer_id;
		
		private string _name;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_time;
		
		private string _avatar;
		
		private string _singer_url;
		
		private string _description;
		
		private EntitySet<mic_song> _mic_songs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsinger_idChanging(int value);
    partial void Onsinger_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_timeChanged();
    partial void OnavatarChanging(string value);
    partial void OnavatarChanged();
    partial void Onsinger_urlChanging(string value);
    partial void Onsinger_urlChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public mic_singer()
		{
			this._mic_songs = new EntitySet<mic_song>(new Action<mic_song>(this.attach_mic_songs), new Action<mic_song>(this.detach_mic_songs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int singer_id
		{
			get
			{
				return this._singer_id;
			}
			set
			{
				if ((this._singer_id != value))
				{
					this.Onsinger_idChanging(value);
					this.SendPropertyChanging();
					this._singer_id = value;
					this.SendPropertyChanged("singer_id");
					this.Onsinger_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(50)")]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_time
		{
			get
			{
				return this._modified_time;
			}
			set
			{
				if ((this._modified_time != value))
				{
					this.Onmodified_timeChanging(value);
					this.SendPropertyChanging();
					this._modified_time = value;
					this.SendPropertyChanged("modified_time");
					this.Onmodified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avatar", DbType="NChar(500)")]
		public string avatar
		{
			get
			{
				return this._avatar;
			}
			set
			{
				if ((this._avatar != value))
				{
					this.OnavatarChanging(value);
					this.SendPropertyChanging();
					this._avatar = value;
					this.SendPropertyChanged("avatar");
					this.OnavatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singer_url", DbType="NVarChar(500)")]
		public string singer_url
		{
			get
			{
				return this._singer_url;
			}
			set
			{
				if ((this._singer_url != value))
				{
					this.Onsinger_urlChanging(value);
					this.SendPropertyChanging();
					this._singer_url = value;
					this.SendPropertyChanged("singer_url");
					this.Onsinger_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_singer_mic_song", Storage="_mic_songs", ThisKey="singer_id", OtherKey="singer_id")]
		public EntitySet<mic_song> mic_songs
		{
			get
			{
				return this._mic_songs;
			}
			set
			{
				this._mic_songs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mic_songs(mic_song entity)
		{
			this.SendPropertyChanging();
			entity.mic_singer = this;
		}
		
		private void detach_mic_songs(mic_song entity)
		{
			this.SendPropertyChanging();
			entity.mic_singer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_song_comments")]
	public partial class mic_song_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _song_comment_id;
		
		private int _song_id;
		
		private int _user_id;
		
		private string _comment;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private EntityRef<mic_song> _mic_song;
		
		private EntityRef<mic_user> _mic_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsong_comment_idChanging(int value);
    partial void Onsong_comment_idChanged();
    partial void Onsong_idChanging(int value);
    partial void Onsong_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    #endregion
		
		public mic_song_comment()
		{
			this._mic_song = default(EntityRef<mic_song>);
			this._mic_user = default(EntityRef<mic_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_comment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int song_comment_id
		{
			get
			{
				return this._song_comment_id;
			}
			set
			{
				if ((this._song_comment_id != value))
				{
					this.Onsong_comment_idChanging(value);
					this.SendPropertyChanging();
					this._song_comment_id = value;
					this.SendPropertyChanged("song_comment_id");
					this.Onsong_comment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_id", DbType="Int NOT NULL")]
		public int song_id
		{
			get
			{
				return this._song_id;
			}
			set
			{
				if ((this._song_id != value))
				{
					if (this._mic_song.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsong_idChanging(value);
					this.SendPropertyChanging();
					this._song_id = value;
					this.SendPropertyChanged("song_id");
					this.Onsong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mic_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_song_comment", Storage="_mic_song", ThisKey="song_id", OtherKey="song_id", IsForeignKey=true)]
		public mic_song mic_song
		{
			get
			{
				return this._mic_song.Entity;
			}
			set
			{
				mic_song previousValue = this._mic_song.Entity;
				if (((previousValue != value) 
							|| (this._mic_song.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_song.Entity = null;
						previousValue.mic_song_comments.Remove(this);
					}
					this._mic_song.Entity = value;
					if ((value != null))
					{
						value.mic_song_comments.Add(this);
						this._song_id = value.song_id;
					}
					else
					{
						this._song_id = default(int);
					}
					this.SendPropertyChanged("mic_song");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_song_comment", Storage="_mic_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mic_user mic_user
		{
			get
			{
				return this._mic_user.Entity;
			}
			set
			{
				mic_user previousValue = this._mic_user.Entity;
				if (((previousValue != value) 
							|| (this._mic_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_user.Entity = null;
						previousValue.mic_song_comments.Remove(this);
					}
					this._mic_user.Entity = value;
					if ((value != null))
					{
						value.mic_song_comments.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mic_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_song_likes")]
	public partial class mic_song_like : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _song_like_id;
		
		private int _song_id;
		
		private int _user_id;
		
		private bool _liked;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private EntityRef<mic_song> _mic_song;
		
		private EntityRef<mic_user> _mic_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsong_like_idChanging(int value);
    partial void Onsong_like_idChanged();
    partial void Onsong_idChanging(int value);
    partial void Onsong_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnlikedChanging(bool value);
    partial void OnlikedChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    #endregion
		
		public mic_song_like()
		{
			this._mic_song = default(EntityRef<mic_song>);
			this._mic_user = default(EntityRef<mic_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_like_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int song_like_id
		{
			get
			{
				return this._song_like_id;
			}
			set
			{
				if ((this._song_like_id != value))
				{
					this.Onsong_like_idChanging(value);
					this.SendPropertyChanging();
					this._song_like_id = value;
					this.SendPropertyChanged("song_like_id");
					this.Onsong_like_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_id", DbType="Int NOT NULL")]
		public int song_id
		{
			get
			{
				return this._song_id;
			}
			set
			{
				if ((this._song_id != value))
				{
					if (this._mic_song.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsong_idChanging(value);
					this.SendPropertyChanging();
					this._song_id = value;
					this.SendPropertyChanged("song_id");
					this.Onsong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._mic_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_liked", DbType="Bit NOT NULL")]
		public bool liked
		{
			get
			{
				return this._liked;
			}
			set
			{
				if ((this._liked != value))
				{
					this.OnlikedChanging(value);
					this.SendPropertyChanging();
					this._liked = value;
					this.SendPropertyChanged("liked");
					this.OnlikedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_song_like", Storage="_mic_song", ThisKey="song_id", OtherKey="song_id", IsForeignKey=true)]
		public mic_song mic_song
		{
			get
			{
				return this._mic_song.Entity;
			}
			set
			{
				mic_song previousValue = this._mic_song.Entity;
				if (((previousValue != value) 
							|| (this._mic_song.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_song.Entity = null;
						previousValue.mic_song_likes.Remove(this);
					}
					this._mic_song.Entity = value;
					if ((value != null))
					{
						value.mic_song_likes.Add(this);
						this._song_id = value.song_id;
					}
					else
					{
						this._song_id = default(int);
					}
					this.SendPropertyChanged("mic_song");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_song_like", Storage="_mic_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public mic_user mic_user
		{
			get
			{
				return this._mic_user.Entity;
			}
			set
			{
				mic_user previousValue = this._mic_user.Entity;
				if (((previousValue != value) 
							|| (this._mic_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_user.Entity = null;
						previousValue.mic_song_likes.Remove(this);
					}
					this._mic_user.Entity = value;
					if ((value != null))
					{
						value.mic_song_likes.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("mic_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_song_playlists")]
	public partial class mic_song_playlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _song_playlist_id;
		
		private int _song_id;
		
		private int _playlist_id;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_time;
		
		private EntityRef<mic_playlist> _mic_playlist;
		
		private EntityRef<mic_song> _mic_song;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsong_playlist_idChanging(int value);
    partial void Onsong_playlist_idChanged();
    partial void Onsong_idChanging(int value);
    partial void Onsong_idChanged();
    partial void Onplaylist_idChanging(int value);
    partial void Onplaylist_idChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_timeChanged();
    #endregion
		
		public mic_song_playlist()
		{
			this._mic_playlist = default(EntityRef<mic_playlist>);
			this._mic_song = default(EntityRef<mic_song>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_playlist_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int song_playlist_id
		{
			get
			{
				return this._song_playlist_id;
			}
			set
			{
				if ((this._song_playlist_id != value))
				{
					this.Onsong_playlist_idChanging(value);
					this.SendPropertyChanging();
					this._song_playlist_id = value;
					this.SendPropertyChanged("song_playlist_id");
					this.Onsong_playlist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_id", DbType="Int NOT NULL")]
		public int song_id
		{
			get
			{
				return this._song_id;
			}
			set
			{
				if ((this._song_id != value))
				{
					if (this._mic_song.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsong_idChanging(value);
					this.SendPropertyChanging();
					this._song_id = value;
					this.SendPropertyChanged("song_id");
					this.Onsong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playlist_id", DbType="Int NOT NULL")]
		public int playlist_id
		{
			get
			{
				return this._playlist_id;
			}
			set
			{
				if ((this._playlist_id != value))
				{
					if (this._mic_playlist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplaylist_idChanging(value);
					this.SendPropertyChanging();
					this._playlist_id = value;
					this.SendPropertyChanged("playlist_id");
					this.Onplaylist_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(50)")]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_time
		{
			get
			{
				return this._modified_time;
			}
			set
			{
				if ((this._modified_time != value))
				{
					this.Onmodified_timeChanging(value);
					this.SendPropertyChanging();
					this._modified_time = value;
					this.SendPropertyChanged("modified_time");
					this.Onmodified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_playlist_mic_song_playlist", Storage="_mic_playlist", ThisKey="playlist_id", OtherKey="playlist_id", IsForeignKey=true)]
		public mic_playlist mic_playlist
		{
			get
			{
				return this._mic_playlist.Entity;
			}
			set
			{
				mic_playlist previousValue = this._mic_playlist.Entity;
				if (((previousValue != value) 
							|| (this._mic_playlist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_playlist.Entity = null;
						previousValue.mic_song_playlists.Remove(this);
					}
					this._mic_playlist.Entity = value;
					if ((value != null))
					{
						value.mic_song_playlists.Add(this);
						this._playlist_id = value.playlist_id;
					}
					else
					{
						this._playlist_id = default(int);
					}
					this.SendPropertyChanged("mic_playlist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_song_playlist", Storage="_mic_song", ThisKey="song_id", OtherKey="song_id", IsForeignKey=true)]
		public mic_song mic_song
		{
			get
			{
				return this._mic_song.Entity;
			}
			set
			{
				mic_song previousValue = this._mic_song.Entity;
				if (((previousValue != value) 
							|| (this._mic_song.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_song.Entity = null;
						previousValue.mic_song_playlists.Remove(this);
					}
					this._mic_song.Entity = value;
					if ((value != null))
					{
						value.mic_song_playlists.Add(this);
						this._song_id = value.song_id;
					}
					else
					{
						this._song_id = default(int);
					}
					this.SendPropertyChanged("mic_song");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_songs")]
	public partial class mic_song : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _song_id;
		
		private string _name;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_time;
		
		private string _note;
		
		private System.Nullable<long> _views;
		
		private string _thumbnail;
		
		private string _song_url;
		
		private string _song_src;
		
		private int _singer_id;
		
		private string _type;
		
		private string _language;
		
		private EntitySet<mic_favourite_song> _mic_favourite_songs;
		
		private EntitySet<mic_song_comment> _mic_song_comments;
		
		private EntitySet<mic_song_like> _mic_song_likes;
		
		private EntitySet<mic_song_playlist> _mic_song_playlists;
		
		private EntityRef<mic_singer> _mic_singer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsong_idChanging(int value);
    partial void Onsong_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_timeChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnviewsChanging(System.Nullable<long> value);
    partial void OnviewsChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    partial void Onsong_urlChanging(string value);
    partial void Onsong_urlChanged();
    partial void Onsong_srcChanging(string value);
    partial void Onsong_srcChanged();
    partial void Onsinger_idChanging(int value);
    partial void Onsinger_idChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnlanguageChanging(string value);
    partial void OnlanguageChanged();
    #endregion
		
		public mic_song()
		{
			this._mic_favourite_songs = new EntitySet<mic_favourite_song>(new Action<mic_favourite_song>(this.attach_mic_favourite_songs), new Action<mic_favourite_song>(this.detach_mic_favourite_songs));
			this._mic_song_comments = new EntitySet<mic_song_comment>(new Action<mic_song_comment>(this.attach_mic_song_comments), new Action<mic_song_comment>(this.detach_mic_song_comments));
			this._mic_song_likes = new EntitySet<mic_song_like>(new Action<mic_song_like>(this.attach_mic_song_likes), new Action<mic_song_like>(this.detach_mic_song_likes));
			this._mic_song_playlists = new EntitySet<mic_song_playlist>(new Action<mic_song_playlist>(this.attach_mic_song_playlists), new Action<mic_song_playlist>(this.detach_mic_song_playlists));
			this._mic_singer = default(EntityRef<mic_singer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int song_id
		{
			get
			{
				return this._song_id;
			}
			set
			{
				if ((this._song_id != value))
				{
					this.Onsong_idChanging(value);
					this.SendPropertyChanging();
					this._song_id = value;
					this.SendPropertyChanged("song_id");
					this.Onsong_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(50)")]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_time
		{
			get
			{
				return this._modified_time;
			}
			set
			{
				if ((this._modified_time != value))
				{
					this.Onmodified_timeChanging(value);
					this.SendPropertyChanging();
					this._modified_time = value;
					this.SendPropertyChanged("modified_time");
					this.Onmodified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(255)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_views", DbType="BigInt")]
		public System.Nullable<long> views
		{
			get
			{
				return this._views;
			}
			set
			{
				if ((this._views != value))
				{
					this.OnviewsChanging(value);
					this.SendPropertyChanging();
					this._views = value;
					this.SendPropertyChanged("views");
					this.OnviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="NVarChar(500)")]
		public string thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_url", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string song_url
		{
			get
			{
				return this._song_url;
			}
			set
			{
				if ((this._song_url != value))
				{
					this.Onsong_urlChanging(value);
					this.SendPropertyChanging();
					this._song_url = value;
					this.SendPropertyChanged("song_url");
					this.Onsong_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_song_src", DbType="NChar(500) NOT NULL", CanBeNull=false)]
		public string song_src
		{
			get
			{
				return this._song_src;
			}
			set
			{
				if ((this._song_src != value))
				{
					this.Onsong_srcChanging(value);
					this.SendPropertyChanging();
					this._song_src = value;
					this.SendPropertyChanged("song_src");
					this.Onsong_srcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singer_id", DbType="Int NOT NULL")]
		public int singer_id
		{
			get
			{
				return this._singer_id;
			}
			set
			{
				if ((this._singer_id != value))
				{
					if (this._mic_singer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsinger_idChanging(value);
					this.SendPropertyChanging();
					this._singer_id = value;
					this.SendPropertyChanged("singer_id");
					this.Onsinger_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string language
		{
			get
			{
				return this._language;
			}
			set
			{
				if ((this._language != value))
				{
					this.OnlanguageChanging(value);
					this.SendPropertyChanging();
					this._language = value;
					this.SendPropertyChanged("language");
					this.OnlanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_favourite_song", Storage="_mic_favourite_songs", ThisKey="song_id", OtherKey="song_id")]
		public EntitySet<mic_favourite_song> mic_favourite_songs
		{
			get
			{
				return this._mic_favourite_songs;
			}
			set
			{
				this._mic_favourite_songs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_song_comment", Storage="_mic_song_comments", ThisKey="song_id", OtherKey="song_id")]
		public EntitySet<mic_song_comment> mic_song_comments
		{
			get
			{
				return this._mic_song_comments;
			}
			set
			{
				this._mic_song_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_song_like", Storage="_mic_song_likes", ThisKey="song_id", OtherKey="song_id")]
		public EntitySet<mic_song_like> mic_song_likes
		{
			get
			{
				return this._mic_song_likes;
			}
			set
			{
				this._mic_song_likes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_song_mic_song_playlist", Storage="_mic_song_playlists", ThisKey="song_id", OtherKey="song_id")]
		public EntitySet<mic_song_playlist> mic_song_playlists
		{
			get
			{
				return this._mic_song_playlists;
			}
			set
			{
				this._mic_song_playlists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_singer_mic_song", Storage="_mic_singer", ThisKey="singer_id", OtherKey="singer_id", IsForeignKey=true)]
		public mic_singer mic_singer
		{
			get
			{
				return this._mic_singer.Entity;
			}
			set
			{
				mic_singer previousValue = this._mic_singer.Entity;
				if (((previousValue != value) 
							|| (this._mic_singer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mic_singer.Entity = null;
						previousValue.mic_songs.Remove(this);
					}
					this._mic_singer.Entity = value;
					if ((value != null))
					{
						value.mic_songs.Add(this);
						this._singer_id = value.singer_id;
					}
					else
					{
						this._singer_id = default(int);
					}
					this.SendPropertyChanged("mic_singer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mic_favourite_songs(mic_favourite_song entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = this;
		}
		
		private void detach_mic_favourite_songs(mic_favourite_song entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = null;
		}
		
		private void attach_mic_song_comments(mic_song_comment entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = this;
		}
		
		private void detach_mic_song_comments(mic_song_comment entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = null;
		}
		
		private void attach_mic_song_likes(mic_song_like entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = this;
		}
		
		private void detach_mic_song_likes(mic_song_like entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = null;
		}
		
		private void attach_mic_song_playlists(mic_song_playlist entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = this;
		}
		
		private void detach_mic_song_playlists(mic_song_playlist entity)
		{
			this.SendPropertyChanging();
			entity.mic_song = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mic_users")]
	public partial class mic_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _login_name;
		
		private string _full_name;
		
		private string _email;
		
		private string _mobile_number;
		
		private string _password;
		
		private string _role;
		
		private char _is_deleted;
		
		private string _created_by;
		
		private System.Nullable<System.DateTime> _created_time;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_time;
		
		private string _user_url;
		
		private EntitySet<mic_favourite_song> _mic_favourite_songs;
		
		private EntitySet<mic_playlist> _mic_playlists;
		
		private EntitySet<mic_song_comment> _mic_song_comments;
		
		private EntitySet<mic_song_like> _mic_song_likes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onlogin_nameChanging(string value);
    partial void Onlogin_nameChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onmobile_numberChanging(string value);
    partial void Onmobile_numberChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void Onis_deletedChanging(char value);
    partial void Onis_deletedChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_timeChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_timeChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_timeChanged();
    partial void Onuser_urlChanging(string value);
    partial void Onuser_urlChanged();
    #endregion
		
		public mic_user()
		{
			this._mic_favourite_songs = new EntitySet<mic_favourite_song>(new Action<mic_favourite_song>(this.attach_mic_favourite_songs), new Action<mic_favourite_song>(this.detach_mic_favourite_songs));
			this._mic_playlists = new EntitySet<mic_playlist>(new Action<mic_playlist>(this.attach_mic_playlists), new Action<mic_playlist>(this.detach_mic_playlists));
			this._mic_song_comments = new EntitySet<mic_song_comment>(new Action<mic_song_comment>(this.attach_mic_song_comments), new Action<mic_song_comment>(this.detach_mic_song_comments));
			this._mic_song_likes = new EntitySet<mic_song_like>(new Action<mic_song_like>(this.attach_mic_song_likes), new Action<mic_song_like>(this.detach_mic_song_likes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_name", DbType="NVarChar(255)")]
		public string login_name
		{
			get
			{
				return this._login_name;
			}
			set
			{
				if ((this._login_name != value))
				{
					this.Onlogin_nameChanging(value);
					this.SendPropertyChanging();
					this._login_name = value;
					this.SendPropertyChanged("login_name");
					this.Onlogin_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(255)")]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_number", DbType="NVarChar(20)")]
		public string mobile_number
		{
			get
			{
				return this._mobile_number;
			}
			set
			{
				if ((this._mobile_number != value))
				{
					this.Onmobile_numberChanging(value);
					this.SendPropertyChanging();
					this._mobile_number = value;
					this.SendPropertyChanged("mobile_number");
					this.Onmobile_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="NVarChar(50)")]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_deleted", DbType="Char(1) NOT NULL")]
		public char is_deleted
		{
			get
			{
				return this._is_deleted;
			}
			set
			{
				if ((this._is_deleted != value))
				{
					this.Onis_deletedChanging(value);
					this.SendPropertyChanging();
					this._is_deleted = value;
					this.SendPropertyChanged("is_deleted");
					this.Onis_deletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(50)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_time
		{
			get
			{
				return this._created_time;
			}
			set
			{
				if ((this._created_time != value))
				{
					this.Oncreated_timeChanging(value);
					this.SendPropertyChanging();
					this._created_time = value;
					this.SendPropertyChanged("created_time");
					this.Oncreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(50)")]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_time
		{
			get
			{
				return this._modified_time;
			}
			set
			{
				if ((this._modified_time != value))
				{
					this.Onmodified_timeChanging(value);
					this.SendPropertyChanging();
					this._modified_time = value;
					this.SendPropertyChanged("modified_time");
					this.Onmodified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_url", DbType="NVarChar(500)")]
		public string user_url
		{
			get
			{
				return this._user_url;
			}
			set
			{
				if ((this._user_url != value))
				{
					this.Onuser_urlChanging(value);
					this.SendPropertyChanging();
					this._user_url = value;
					this.SendPropertyChanged("user_url");
					this.Onuser_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_favourite_song", Storage="_mic_favourite_songs", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mic_favourite_song> mic_favourite_songs
		{
			get
			{
				return this._mic_favourite_songs;
			}
			set
			{
				this._mic_favourite_songs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_playlist", Storage="_mic_playlists", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mic_playlist> mic_playlists
		{
			get
			{
				return this._mic_playlists;
			}
			set
			{
				this._mic_playlists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_song_comment", Storage="_mic_song_comments", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mic_song_comment> mic_song_comments
		{
			get
			{
				return this._mic_song_comments;
			}
			set
			{
				this._mic_song_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mic_user_mic_song_like", Storage="_mic_song_likes", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<mic_song_like> mic_song_likes
		{
			get
			{
				return this._mic_song_likes;
			}
			set
			{
				this._mic_song_likes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mic_favourite_songs(mic_favourite_song entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = this;
		}
		
		private void detach_mic_favourite_songs(mic_favourite_song entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = null;
		}
		
		private void attach_mic_playlists(mic_playlist entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = this;
		}
		
		private void detach_mic_playlists(mic_playlist entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = null;
		}
		
		private void attach_mic_song_comments(mic_song_comment entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = this;
		}
		
		private void detach_mic_song_comments(mic_song_comment entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = null;
		}
		
		private void attach_mic_song_likes(mic_song_like entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = this;
		}
		
		private void detach_mic_song_likes(mic_song_like entity)
		{
			this.SendPropertyChanging();
			entity.mic_user = null;
		}
	}
}
#pragma warning restore 1591
